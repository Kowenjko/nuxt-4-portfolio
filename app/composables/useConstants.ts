export const useConstants = () => {
  const { t, messages, locale } = useI18n()
  const sectionsStore = useSectionsStore()

  const navLinks = computed<NavLinkI[]>(() => [
    { title: t('nav.category.services'), url: 'services', isShow: sectionsStore.showServices! },
    { title: t('nav.category.skills'), url: 'skills', isShow: sectionsStore.showSkills! },
    { title: t('nav.category.experience'), url: 'experience', isShow: sectionsStore.showExperience! },
    { title: t('nav.category.portfolios'), url: 'portfolios', isShow: sectionsStore.showPortfolios! },
    { title: t('nav.category.reviews'), url: 'reviews', isShow: sectionsStore.showReviews! },
    { title: t('nav.category.contact'), url: 'contact', isShow: sectionsStore.showContact! },
  ])

  const services = computed<ServiceI[]>(() => [
    {
      title: t('services.title.frontend'),
      icon: 'uil-layer-group',
      description: t('services.description.frontend'),
    },
    {
      title: t('services.title.e_commerce'),
      icon: 'streamline-ultimate:e-commerce-shopping-bag',
      description: t('services.description.e_commerce'),
    },
    {
      title: t('services.title.ui_ux'),
      icon: 'vaadin:palete',
      description: t('services.description.ui_ux'),
    },
    {
      title: t('services.title.support'),
      icon: 'fa7-regular:handshake-simple',
      description: t('services.description.support'),
    },
  ])

  const parseResponsibilities = (type: string) =>
    // @ts-ignore
    // messages.value[locale.value]?.experiences?.[type]?.responsibilities?.map((item: any) => item?.loc?.source)
    messages.value[locale.value]?.experiences?.[type]?.responsibilities

  const experiences = computed<ExperienceI[]>(() => [
    {
      title: t('experiences.abvv.title'),
      name: 'ABVV.Group',
      date: t('experiences.abvv.date'),
      icon: '/svg/abvv.svg',
      description: t('experiences.abvv.description'),
      responsibilities: parseResponsibilities('abvv'),
    },
    {
      title: t('experiences.nexoft.title'),
      name: 'Nexoft UG',
      date: '2021 - 2023',
      icon: '/svg/nexoft.svg',
      description: t('experiences.nexoft.description'),
      responsibilities: parseResponsibilities('nexoft'),
    },
    {
      title: t('experiences.softServe.title'),
      name: 'Python Online Marathon â€” SoftServe IT Academy',
      date: '2021',
      icon: '/svg/softserve.svg',
      description: t('experiences.softServe.description'),
      responsibilities: parseResponsibilities('softServe'),
    },
  ])

  const workProjects = computed<ProjectI[]>(() => [
    {
      title: t('works.storeInUa.title'),
      urlGit: null,
      url: 'https://storeinua.com',
      keywords: ['Nuxt-3', 'I18n', 'Pinia', 'Vuelidate'],
      category: t('works.storeInUa.category'),
      description: t('works.storeInUa.description'),
      imageUrl: '/webp/tehko.webp',
    },
    {
      title: t('works.pm_tehko.title'),
      description: t('works.pm_tehko.description'),
      category: t('works.pm_tehko.category'),
      urlGit: null,
      url: null,
      keywords: ['Vue', 'Vuetify', 'Vuexy', 'I18n', 'Pinia', 'Axios'],
      imageUrl: '/webp/pm-tehko.webp',
    },
    {
      title: t('works.poor_club.title'),
      description: t('works.poor_club.description'),
      category: t('works.poor_club.category'),
      urlGit: null,
      url: null,
      keywords: ['Nuxt-3', 'Sass', 'I18n', 'Pinia'],
      imageUrl: '/webp/bidnyagka.webp',
    },
    {
      title: t('works.jounce_chat.title'),
      description: t('works.jounce_chat.description'),
      category: t('works.jounce_chat.category'),
      urlGit: null,
      url: 'https://app.jounce.ai/',
      keywords: ['Vue', 'OpenAI', 'Tailwind', 'Firebase'],
      imageUrl: '/webp/jounce-2.webp',
    },
    {
      title: t('works.jounce_email.title'),
      description: t('works.jounce_email.description'),
      category: t('works.jounce_email.category'),
      urlGit: null,
      url: null,
      keywords: ['Vue', 'Vite', 'Tailwind', 'Firebase'],
      imageUrl: '/webp/jounce.webp',
    },
    {
      title: t('works.newPet.title'),
      description: t('works.newPet.description'),
      category: t('works.newPet.category'),
      urlGit: null,
      url: 'https://pfotenkompass.fressnapf.de/',
      keywords: ['Nuxt', 'Vuetify'],
      imageUrl: '/webp/newpet.webp',
    },
    {
      title: t('works.bitburger.title'),
      description: t('works.bitburger.description'),
      category: t('works.bitburger.category'),
      urlGit: null,
      url: null,
      keywords: ['Shopware', 'Vue'],
      imageUrl: '/webp/pitburger.webp',
    },
    {
      title: t('works.mylo.title'),
      description: t('works.mylo.description'),
      category: t('works.mylo.category'),
      urlGit: null,
      url: 'https://mylo.de/pages/suewag-ebike-abo',
      keywords: ['Shopify'],
      imageUrl: '/webp/mylo.webp',
    },
    {
      title: t('works.planted.title'),
      description: t('works.planted.description'),
      category: t('works.planted.category'),
      urlGit: null,
      url: 'https://uk.shop.eatplanted.com/',
      keywords: ['Shopify'],
      imageUrl: '/webp/planted.webp',
    },
    {
      title: t('works.purenature.title'),
      description: t('works.purenature.description'),
      category: t('works.purenature.category'),
      urlGit: null,
      url: 'https://www.purenature-shop.de/',
      keywords: ['Shopify'],
      imageUrl: '/webp/purenature.webp',
    },
  ])

  const testProjects = computed<ProjectI[]>(() => [
    {
      title: t('test_works.nuxt_4_calendar.title'),
      description: t('test_works.nuxt_4_calendar.description'),
      category: t('test_works.nuxt_4_calendar.category'),
      urlGit: 'https://github.com/Kowenjko/nuxt4-calendar',
      url: 'https://nuxt4-calendar.vercel.app',
      keywords: ['Nuxt 4', 'Drizzle', 'Neon database', 'Tailwindcss'],
      imageUrl: '/webp/calendar.png',
    },
    {
      title: t('test_works.nuxt_4_auth.title'),
      description: t('test_works.nuxt_4_auth.description'),
      category: t('test_works.nuxt_4_auth.category'),
      urlGit: 'https://github.com/Kowenjko/nuxt-4-auth',
      url: null,
      keywords: ['Nuxt 4', 'Drizzle', 'Nuxt/ui', 'Nuxt-auth'],
      imageUrl: '/webp/nuxt-a-auth.png',
    },
    {
      title: t('test_works.nuxt_whatsapp.title'),
      description: t('test_works.nuxt_whatsapp.description'),
      category: t('test_works.nuxt_whatsapp.category'),
      urlGit: 'https://github.com/Kowenjko/nuxt-whatsapp-clone',
      url: 'https://nuxt-whatsapp-clone.vercel.app',
      keywords: ['Nuxt 3', 'Tailwind', 'Convex', 'Clerk', 'Zegocloud', 'Emoji', 'Pinia', 'OpenAI', 'Radix'],
      imageUrl: '/webp/whatsapp.png',
    },
    {
      title: t('test_works.nuxt_auth_mongoDB.title'),
      description: t('test_works.nuxt_auth_mongoDB.description'),
      category: t('test_works.nuxt_auth_mongoDB.category'),
      urlGit: 'https://github.com/Kowenjko/nuxt-auth-mongo',
      url: 'https://nuxt-auth-mongo.vercel.app',
      keywords: ['Nuxt 3', 'Tailwind', 'Motion', 'Resend', 'MongoDB', 'Mailtrap', 'Pinia'],
      imageUrl: '/webp/auth-mongo.png',
    },
    {
      title: t('test_works.zoom_clone.title'),
      description: t('test_works.zoom_clone.description'),
      category: t('test_works.zoom_clone.category'),
      urlGit: 'https://github.com/Kowenjko/nuxt-zoom-clone',
      url: null,
      keywords: ['Nuxt 3', 'Tailwind', 'Shadcn', 'Clerk', 'Stream-IO'],
      imageUrl: '/webp/zoom.png',
    },
    {
      title: t('test_works.mongoDB_trello.title'),
      description: t('test_works.mongoDB_trello.description'),
      category: t('test_works.mongoDB_trello.category'),
      urlGit: 'https://github.com/Kowenjko/nuxt-mongodb-trello',
      url: null,
      keywords: ['Nuxt 3', 'Vuedraggable', 'MongoDB', 'Stripe', 'Next-Auth'],
      imageUrl: '/webp/mongodb-trello.png',
    },
    {
      title: t('test_works.nuxt_trello.title'),
      description: t('test_works.nuxt_trello.description'),
      category: t('test_works.nuxt_trello.category'),
      urlGit: 'https://github.com/Kowenjko/nuxt-dashboard-trello',
      url: 'https://nuxt-dashboard-trello.vercel.app',
      keywords: ['Nuxt 3', 'Pinia', 'Tailwind', 'Shadcn', 'Clerk'],
      imageUrl: '/webp/trello.png',
    },
    {
      title: t('test_works.jotion.title'),
      description: t('test_works.jotion.description'),
      category: t('test_works.jotion.category'),
      urlGit: 'https://github.com/Kowenjko/nuxt-notion-clone',
      url: null,
      keywords: ['Nuxt 3', 'Appwrite', 'Pinia', 'Tailwind', 'Shadcn', 'Clerk'],
      imageUrl: '/webp/notion.png',
    },
    {
      title: t('test_works.chat_appwrite.title'),
      description: t('test_works.chat_appwrite.description'),
      category: t('test_works.chat_appwrite.category'),
      urlGit: 'https://github.com/Kowenjko/vue-realtime-chat-appwrite',
      url: 'https://vue-realtime-chat-appwrite.vercel.app',
      keywords: ['Vue 3', 'Appwrite', 'Pinia'],
      imageUrl: '/webp/chat-appwrite.png',
    },
    {
      title: t('test_works.genius_ai.title'),
      description: t('test_works.genius_ai.description'),
      category: t('test_works.genius_ai.category'),
      urlGit: 'https://github.com/Kowenjko/nuxt-saas-ai',
      url: 'https://nuxt-saas-ai.vercel.app/',
      keywords: ['Nuxt 3', 'Clerk', 'Stripe', 'Tailwind', 'OpenAI', 'Radix', 'Pinia'],
      imageUrl: '/webp/genius.png',
    },
    {
      title: t('test_works.estate.title'),
      description: t('test_works.estate.description'),
      category: t('test_works.estate.category'),
      urlGit: 'https://github.com/Kowenjko/mevn-estate',
      url: null,
      keywords: ['Vue', 'Mongodb', 'Node', 'Tailwind', 'Firebase'],
      imageUrl: '/webp/mevn-estate.png',
    },
    {
      title: t('test_works.insove.title'),
      description: t('test_works.insove.description'),
      category: t('test_works.insove.category'),
      urlGit: 'https://github.com/Kowenjko/vue-insore',
      url: null,
      keywords: ['Vue 3', 'Pinia', 'Swiper', 'Tailwind'],
      imageUrl: '/webp/insove.png',
    },
    {
      title: t('test_works.vue_todo.title'),
      description: t('test_works.vue_todo.description'),
      category: t('test_works.vue_todo.category'),
      urlGit: 'https://github.com/Kowenjko/todo-list-vue.git',
      url: null,
      keywords: ['Vue 3 composition'],
      imageUrl: '/webp/todo-vue.webp',
    },
    {
      title: t('test_works.game_battle.title'),
      description: t('test_works.game_battle.description'),
      category: t('test_works.game_battle.category'),
      urlGit: 'https://github.com/Kowenjko/See_batle_v2.git',
      url: null,
      keywords: ['HTML', 'CSS', 'JavaScript'],
      imageUrl: '/webp/mb.webp',
    },
    {
      title: t('test_works.movie_viewing.title'),
      description: t('test_works.movie_viewing.description'),
      category: t('test_works.movie_viewing.category'),
      urlGit: 'https://github.com/Kowenjko/Kursova_2_JS_Kowenjko.git',
      url: null,
      keywords: ['HTML', 'CSS', 'JavaScript'],
      imageUrl: '/webp/movie_js.webp',
    },
    {
      title: t('test_works.electro_shop.title'),
      description: t('test_works.electro_shop.description'),
      category: t('test_works.electro_shop.category'),
      urlGit: 'https://github.com/Kowenjko/Kursova_JS_Kowenjko.git',
      url: null,
      keywords: ['Django', 'Python', 'PostgreSQL'],
      imageUrl: '/webp/django.webp',
    },
    {
      title: t('test_works.world_news.title'),
      description: t('test_works.world_news.description'),
      category: t('test_works.world_news.category'),
      urlGit: 'https://github.com/Kowenjko/Kursova_JS_Kowenjko.git',
      url: null,
      keywords: ['HTML', 'CSS', 'JavaScript'],
      imageUrl: '/webp/news.webp',
    },
    {
      title: t('test_works.react_bootstrap.title'),
      description: t('test_works.react_bootstrap.description'),
      category: t('test_works.react_bootstrap.category'),
      urlGit: 'https://github.com/Kowenjko/React_Bootstrap.git',
      url: null,
      keywords: ['React', 'Bootstrap'],
      imageUrl: '/webp/bootstrap_react.webp',
    },
    {
      title: t('test_works.contact_list.title'),
      description: t('test_works.contact_list.description'),
      category: t('test_works.contact_list.category'),
      urlGit: 'https://github.com/Kowenjko/React_Homework_1_Kowenjko.git',
      url: null,
      keywords: ['React', 'Redux', 'Bootstrap', 'FireBase'],
      imageUrl: '/webp/List.webp',
    },
    {
      title: t('test_works.material.title'),
      description: t('test_works.material.description'),
      category: t('test_works.material.category'),
      urlGit: 'https://github.com/Kowenjko/React_Material_UI.git',
      url: null,
      keywords: ['React', 'Material-UI'],
      imageUrl: '/webp/Material_ui.webp',
    },
    {
      title: t('test_works.yourcar.title'),
      description: t('test_works.yourcar.description'),
      category: t('test_works.yourcar.category'),
      urlGit: 'https://github.com/Kowenjko/React_Yourcar.git',
      url: null,
      keywords: ['React', 'Styled-Components', 'Tailwind'],
      imageUrl: '/webp/car.webp',
    },
    {
      title: t('test_works.internet_shop.title'),
      description: t('test_works.internet_shop.description'),
      category: t('test_works.internet_shop.category'),
      urlGit: 'https://github.com/Kowenjko/React_Yourcar.git',
      url: null,
      keywords: ['React', 'Redux'],
      imageUrl: '/webp/Shop.webp',
    },
    {
      title: t('test_works.movie_react.title'),
      description: t('test_works.movie_react.description'),
      category: t('test_works.movie_react.category'),
      urlGit: 'https://github.com/Kowenjko/Movie_React.git',
      url: null,
      keywords: ['React', 'Styled-Components'],
      imageUrl: '/webp/Movie_React.webp',
    },
  ])

  const contacts = computed<ContactI[]>(() => [
    { title: t('contacts.address.title'), info: t('contacts.address.info'), icon: 'uil:location-point' },
    {
      title: t('contacts.telegram.title'),
      info: 'https://t.me/VasyaKow',
      icon: 'uil:telegram-alt',
    },
    { title: t('contacts.email.title'), info: 'ortoswt@gmail.com', icon: 'uil:envelope-alt' },
  ])

  return { navLinks, services, experiences, workProjects, testProjects, contacts }
}
